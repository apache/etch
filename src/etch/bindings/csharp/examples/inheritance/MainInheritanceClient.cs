// This file automatically generated by:
//   @EtchVersion@ (@EtchBuildTag@) / csharp @EtchVersion@ (@EtchBuildTag@)
//   Tue Apr 15 15:02:11 CDT 2008
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using Etch.Util;
using Etch.Msg;
using Etch.Support;
using Etch.Transport;

namespace etch.bindings.csharp.examples.inheritance
{

///
///<summary> Main implementation for InheritanceClient. </summary>
///
public class MainInheritanceClient : InheritanceHelper.InheritanceClientFactory
{
	///
	/// <summary>Main for InheritanceClient</summary>
	/// <param name="args"></param>
	///
	public static void Main(String[] args)
	{
		string uri = "tcp://localhost:4001";
		if (args.Length > 0)
			uri = args[0];

		MainInheritanceClient implFactory = new MainInheritanceClient();
		RemoteInheritanceServer server = InheritanceHelper.NewServer( uri, null, implFactory );
		
		server._TransportControl(Etch.Transport.TransportConsts.START_AND_WAIT_UP, 4000 );

		// Insert Your Code Here
		//---------------------------------------------------------------------

		server._TransportControl(Etch.Transport.TransportConsts.STOP_AND_WAIT_DOWN, 4000 );

	}

	///
	/// <summary>Constructs the MainInheritanceClient.</summary>
	///
	public MainInheritanceClient()
	{
		// Nothing to do.
	}

	///
	/// <summary>Return a new instance of InheritanceClient.</summary>
	/// @param server
	///
	public InheritanceClient NewInheritanceClient( RemoteInheritanceServer server )
	{
		return new ImplInheritanceClient( server );
	}

}

}