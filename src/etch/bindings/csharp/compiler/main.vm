// This file automatically generated by:
//   $version
//   $now
#set($i = $intf.name())

using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
#if ($helper.isServer($mc))
using System.Runtime.CompilerServices;
#end
using Etch.Util;
using Etch.Msg;
using Etch.Support;
using Etch.Transport;

namespace $intf.parent().name()
{

///
#if ($helper.isServer($mc))
///<summary> Main implementation for ${i}Listener. </summary>
#else
///<summary> Main implementation for $i$suffix. </summary>
#end
///
#if ($helper.isServer($mc))
public class Main${i}Listener : ${i}Helper.${i}ServerFactory
#else
public class Main$i$suffix
#end
{
	///
#if ($helper.isServer($mc))
 	/// <summary>Main for ${i}Listener.</summary>
#else
	/// <summary>Main for $i$suffix</summary>
#end
	/// <param name="args"></param>
	///
	public static void Main(String[] args)
	{
		URL uri = new URL("tcp://localhost:4001");

#if ($helper.isServer($mc))
		Main${i}Listener implFactory = new Main${i}Listener();
		Transport listener = ${i}Helper.New${i}Listener( uri, null, implFactory );

		listener.TransportControl( TransportConsts.START_AND_WAIT_UP, 4000 );
#else
		Impl${i}Client client = new Impl${i}Client( null );
		Remote${i}Server server = ${i}Helper.New${i}Server( uri, null, client );

		server._StartAndWaitUp( 4000 );

		// Insert Your Code Here
		//---------------------------------------------------------------------

		server._StopAndWaitDown( 4000 );
#end
	}

#if ($helper.isServer($mc))
	///
	/// <summary>Constructs the Main${i}Listener.</summary>
	///
	public Main${i}Listener()
	{
		// Nothing to do.
	}

	///
	/// <summary>Return a new instance of ${i}Server.</summary>
	/// @param client
	///
	public ${i}Server New${i}Server( ${i}Client client )
	{
		return new Impl${i}Server( client );
	}
#else
#end
}

}