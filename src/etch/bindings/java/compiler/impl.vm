#set($i = $intf.name())
#set($intfname = "$i$suffix")
#set($baseclname = "Base$intfname")
#set($clname = "Impl$intfname")
#if ($helper.isServer($mc))
#set($peer = "client")
#set($peerclass = "Remote${i}Client")
#else
#set($peer = "server")
#set($peerclass = "Remote${i}Server")
#end
// Generated by:
// $version
// $now

package $intf.parent().name();

#foreach( $n in $intf.iterator() )
#if ($n.isExtern())
#if ($n.hasImport( $helper ))
import $n.getImport( $helper );
#end
#end
#end

/**
 * Your custom implementation of $baseclname. Add methods here to provide
 * implementations of messages from the $peer.
 */
public class $clname extends $baseclname
{
	/**
	 * Constructs the $clname.
	 *
	 * @param $peer a connection to the $peer session. Use this to send a
	 * message to the $peer.
	 */
	public $clname( $peerclass $peer )
	{
		this.$peer = $peer;
	}
	
	/**
	 * A connection to the $peer session. Use this to send a
	 * message to the $peer.
	 */
	@SuppressWarnings( "unused" )
	private final $peerclass $peer;

	// TODO insert methods here to provide implementations of $intfname
	// messages from the $peer.
}