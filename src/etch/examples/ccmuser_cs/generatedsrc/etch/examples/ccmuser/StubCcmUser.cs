// This file automatically generated by:
//   Etch Version 0.95/csharp backend 0.95
//   Wed Aug 15 18:39:49 CDT 2007

namespace etch.examples.ccmuser
{


using System;
using Etch.Msg;
using Etch.Transport;
using Etch.Support;

// using Etch.Support.StubBase;

///
///<summary> Message to call translator for CcmUser. </summary>
///
public class StubCcmUser : StubBase
{
	///
	/// <summary>Stub for CcmUser.</summary>
	/// <param name="obj"> the implementation of CcmUser responsive to requests.</param>
	/// <param name="pool"> thread pool used to run AsyncReceiverMode.POOL methods.</param>
	/// <param name="free"> thread pool used to run AsyncReceiverMode.FREE methods..</param>
	///
	public StubCcmUser( CcmUser obj, Pool pool, Pool free ) : base( obj, pool, free )
	{	
		this._obj = obj;
	}
	
	private CcmUser _obj;

	public override bool Message( MessageSource _src, Who _sender, Message _msg ) 
	{
		if (_msg == null)
		{
			base.Message( _src, _sender, _msg );
			return true;
		}

		switch (_msg.GetXType.Id)
		{
			default:
				return base.Message( _src, _sender, _msg );
		}
	}
}

}