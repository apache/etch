# This file automatically generated by:
#   Etch Version 0.95/ruby backend 0.95
#   Wed Aug 15 18:39:49 CDT 2007

require 'etch/bindings/ruby/msg/message'
require 'etch/bindings/ruby/support/delivery_service'
require 'etch/bindings/ruby/support/mailbox'
require 'etch/bindings/ruby/idl/test/Test'

require 'etch/bindings/ruby/idl/test/RemoteTest'
require 'etch/bindings/ruby/idl/test/CcmUserServer'

#
# Call to message translator for CcmUserServer.
#
class RemoteCcmUserServer < RemoteCcmUser 
	include CcmUserServer

	#
	# Constructs the RemoteCcmUserServer.
	#
	# @param svc
	#
	# first param should be delivery service
	# second param should be the value factory (optional)
	def initialize( *args )
		
		if ( args[1] == nil)
			super( args[0], ValueFactoryCcmUser.new )
		else
			super( args[0], args[1] )
		end	
	end

	def login(serverIP, username, password)
	
 _end_login( _begin_login(serverIP, username, password	) )
	end
	
	def _begin_login(  serverIP  , username  , password 	)
	
		_msg = _newMessage( ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer_login )
		_msg.store( ValueFactoryCcmUser::MF_serverIP, serverIP )
		_msg.store( ValueFactoryCcmUser::MF_username, username )
		_msg.store( ValueFactoryCcmUser::MF_password, password )
		return _svc.begincall( _msg )
	end
	
	def _end_login( _mb )
	
		begin
		
 _svc.endvoidcall( _mb,ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer__result_login,ValueFactoryCcmUser::MF_result, 0 ) 		
		rescue Exception =>_e 
		
			raise _e, "unexpected"
		end
	end

	def logout()
	
 _end_logout( _begin_logout(	) )
	end
	
	def _begin_logout( 	)
	
		_msg = _newMessage( ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer_logout )
		return _svc.begincall( _msg )
	end
	
	def _end_logout( _mb )
	
		begin
		
 _svc.endvoidcall( _mb,ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer__result_logout,ValueFactoryCcmUser::MF_result, 0 ) 		
		rescue Exception =>_e 
		
			raise _e, "unexpected"
		end
	end

	def getUserConfig(user)
	
		return  _end_getUserConfig( _begin_getUserConfig(user	) )
	end
	
	def _begin_getUserConfig(  user 	)
	
		_msg = _newMessage( ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer_getUserConfig )
		_msg.store( ValueFactoryCcmUser::MF_user, user )
		return _svc.begincall( _msg )
	end
	
	def _end_getUserConfig( _mb )
	
		begin
		
			return	 _svc.endcall( _mb, ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer__result_getUserConfig, ValueFactoryCcmUser::MF_result, 0 ) 			
		rescue Exception =>_e 
		
			raise _e, "unexpected"
		end
	end

	def setSpeeddialLabel(pkid, newLabel)
	
 _end_setSpeeddialLabel( _begin_setSpeeddialLabel(pkid, newLabel	) )
	end
	
	def _begin_setSpeeddialLabel(  pkid  , newLabel 	)
	
		_msg = _newMessage( ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer_setSpeeddialLabel )
		_msg.store( ValueFactoryCcmUser::MF_pkid, pkid )
		_msg.store( ValueFactoryCcmUser::MF_newLabel, newLabel )
		return _svc.begincall( _msg )
	end
	
	def _end_setSpeeddialLabel( _mb )
	
		begin
		
 _svc.endvoidcall( _mb,ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialLabel,ValueFactoryCcmUser::MF_result, 0 ) 		
		rescue Exception =>_e 
		
			raise _e, "unexpected"
		end
	end

	def setSpeeddialNumber(pkid, newNumber)
	
 _end_setSpeeddialNumber( _begin_setSpeeddialNumber(pkid, newNumber	) )
	end
	
	def _begin_setSpeeddialNumber(  pkid  , newNumber 	)
	
		_msg = _newMessage( ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer_setSpeeddialNumber )
		_msg.store( ValueFactoryCcmUser::MF_pkid, pkid )
		_msg.store( ValueFactoryCcmUser::MF_newNumber, newNumber )
		return _svc.begincall( _msg )
	end
	
	def _end_setSpeeddialNumber( _mb )
	
		begin
		
 _svc.endvoidcall( _mb,ValueFactoryCcmUser::MT_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialNumber,ValueFactoryCcmUser::MF_result, 0 ) 		
		rescue Exception =>_e 
		
			raise _e, "unexpected"
		end
	end

end
