// This file automatically generated by:
//   Etch Version 0.95/java backend 0.95
//   Wed Aug 15 18:39:49 CDT 2007

package etch.examples.ccmuser;

import etch.bindings.java.msg.Message;
import etch.bindings.java.support.MessageSource;
import etch.bindings.java.support.Pool;
import etch.bindings.java.support._Etch_AuthException;
import metreos.core.Who;
import etch.bindings.java.support.StubBase;
import etch.bindings.java.support.Pool.PoolRunnable;

/**
 * Message to call translator for CcmUser.
 */
public class StubCcmUser extends StubBase
{
	/**
	 * Stub for CcmUser.
	 * @param obj the implementation of CcmUser responsive to requests.
	 * @param pool thread pool used to run AsyncReceiverMode.FREE methods.
	 * @param free thread pool used to run AsyncReceiverMode.FREE methods.
	 */
	public StubCcmUser( CcmUser obj, Pool pool, Pool free )
	{
		super( obj, pool, free );
		this._obj = obj;
	}
	
	@SuppressWarnings("unused")
	private final CcmUser _obj;

	@Override
	public boolean message( final MessageSource _src, final Who _sender, final Message _msg )
		throws Exception
	{
		if (_msg == null)
		{
			super.message( _src, _sender, _msg );
			return true;
		}

		switch (_msg.type().getId())
		{
			default:
				return super.message( _src, _sender, _msg );
		}
	}
}
