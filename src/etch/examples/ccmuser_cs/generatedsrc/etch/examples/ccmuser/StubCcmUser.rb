# This file automatically generated by:
#   Etch Version 0.95/ruby backend 0.95
#   Wed Aug 15 18:39:49 CDT 2007

# package etch.compiler.ast.Service@765291/parent()/name();

require 'etch/bindings/ruby/msg/message'
require 'etch/bindings/ruby/support/message_source'
require 'etch/bindings/ruby/support/pool'
require 'etch/bindings/ruby/support/etch__auth_exception'
require 'etch/bindings/ruby/support/who'
require 'etch/bindings/ruby/support/default_value_factory'
require 'etch/bindings/ruby/idl/test/ValueFactoryTest'

require 'etch/bindings/ruby/support/stub_base'
# import etch.bindings.java.support.Pool.PoolRunnable;

# 
# Message to call translator for CcmUser.
# 
class StubCcmUser < StubBase

	#
	# Stub for CcmUser.
	# @param obj the implementation of CcmUser responsive to requests.
	# @param pool thread pool used to run AsyncReceiverMode.FREE methods.
	# @param free thread pool used to run AsyncReceiverMode.FREE methods.
	#
	def initialize( obj, pool, free )
	
		super( obj, pool, free )
		@_obj = obj
		@vf = ValueFactoryCcmUser.new
	end
	
	def message( _src, _sender, _msg )
	
		if (_msg == nil)
		
			super.message( _src, _sender, _msg )
			return true
		end

		case (_msg.getType().xid)
			when nil then raise "nil id"
			
			else return super.message( _src, _sender, _msg )
		end
	end
end