// This file automatically generated by: 
// Etch Version 0.95/csharp backend 0.95. 
// Wed Aug 15 18:39:49 CDT 2007.

namespace etch.examples.ccmuser
{
using System;
using System.Collections.Generic;
using Etch.Msg;
using Etch.Support;

///
///<summary> ValueFactory for CcmUser. </summary>
///
public class ValueFactoryCcmUser : DefaultValueFactory
{
	/// Type for etch.examples.ccmuser.CcmUser.UserConfiguration 
	public static XType _mt_etch_examples_ccmuser_CcmUser_UserConfiguration = new XType( 584321839, "etch.examples.ccmuser.CcmUser.UserConfiguration" );
	// { addType( _mt_etch_examples_ccmuser_CcmUser_UserConfiguration ); }

	/// Type for etch.examples.ccmuser.CcmUser.Device 
	public static XType _mt_etch_examples_ccmuser_CcmUser_Device = new XType( 1396020274, "etch.examples.ccmuser.CcmUser.Device" );
	// { addType( _mt_etch_examples_ccmuser_CcmUser_Device ); }

	/// Type for etch.examples.ccmuser.CcmUser.Speeddial 
	public static XType _mt_etch_examples_ccmuser_CcmUser_Speeddial = new XType( 1136827771, "etch.examples.ccmuser.CcmUser.Speeddial" );
	// { addType( _mt_etch_examples_ccmuser_CcmUser_Speeddial ); }

	/// Type for etch.examples.ccmuser.CcmUserServer.login 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer_login = new XType( -267962576, "etch.examples.ccmuser.CcmUserServer.login" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer_login ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_login 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_login = new XType( 28137389, "etch.examples.ccmuser.CcmUserServer._result_login" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_login ); }

	/// Type for etch.examples.ccmuser.CcmUserServer.logout 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer_logout = new XType( 1274147843, "etch.examples.ccmuser.CcmUserServer.logout" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer_logout ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_logout 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_logout = new XType( -1001327930, "etch.examples.ccmuser.CcmUserServer._result_logout" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_logout ); }

	/// Type for etch.examples.ccmuser.CcmUserServer.getUserConfig 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer_getUserConfig = new XType( 1580300234, "etch.examples.ccmuser.CcmUserServer.getUserConfig" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer_getUserConfig ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_getUserConfig 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_getUserConfig = new XType( -282501561, "etch.examples.ccmuser.CcmUserServer._result_getUserConfig" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_getUserConfig ); }

	/// Type for etch.examples.ccmuser.CcmUserServer.setSpeeddialLabel 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialLabel = new XType( -1839976634, "etch.examples.ccmuser.CcmUserServer.setSpeeddialLabel" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialLabel ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_setSpeeddialLabel 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialLabel = new XType( 1410365635, "etch.examples.ccmuser.CcmUserServer._result_setSpeeddialLabel" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialLabel ); }

	/// Type for etch.examples.ccmuser.CcmUserServer.setSpeeddialNumber 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialNumber = new XType( -1424516809, "etch.examples.ccmuser.CcmUserServer.setSpeeddialNumber" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialNumber ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_setSpeeddialNumber 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialNumber = new XType( -1578455302, "etch.examples.ccmuser.CcmUserServer._result_setSpeeddialNumber" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialNumber ); }

	/// Type for etch.examples.ccmuser.CcmUserClient.DoINeedThis 
	public static XType _mt_etch_examples_ccmuser_CcmUserClient_DoINeedThis = new XType( -557621791, "etch.examples.ccmuser.CcmUserClient.DoINeedThis" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserClient_DoINeedThis ); }

	/// Type for etch.examples.ccmuser.CcmUserServer._result_DoINeedThis 
	public static XType _mt_etch_examples_ccmuser_CcmUserServer__result_DoINeedThis = new XType( 1085071830, "etch.examples.ccmuser.CcmUserServer._result_DoINeedThis" );
	// { addType( _mt_etch_examples_ccmuser_CcmUserServer__result_DoINeedThis ); }

	
	public new XType GetType( int id )
	{
		switch (id)
		{
			case 584321839: return _mt_etch_examples_ccmuser_CcmUser_UserConfiguration;
			case 1396020274: return _mt_etch_examples_ccmuser_CcmUser_Device;
			case 1136827771: return _mt_etch_examples_ccmuser_CcmUser_Speeddial;
			case -267962576: return _mt_etch_examples_ccmuser_CcmUserServer_login;
			case 28137389: return _mt_etch_examples_ccmuser_CcmUserServer__result_login;
			case 1274147843: return _mt_etch_examples_ccmuser_CcmUserServer_logout;
			case -1001327930: return _mt_etch_examples_ccmuser_CcmUserServer__result_logout;
			case 1580300234: return _mt_etch_examples_ccmuser_CcmUserServer_getUserConfig;
			case -282501561: return _mt_etch_examples_ccmuser_CcmUserServer__result_getUserConfig;
			case -1839976634: return _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialLabel;
			case 1410365635: return _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialLabel;
			case -1424516809: return _mt_etch_examples_ccmuser_CcmUserServer_setSpeeddialNumber;
			case -1578455302: return _mt_etch_examples_ccmuser_CcmUserServer__result_setSpeeddialNumber;
			case -557621791: return _mt_etch_examples_ccmuser_CcmUserClient_DoINeedThis;
			case 1085071830: return _mt_etch_examples_ccmuser_CcmUserServer__result_DoINeedThis;
			default: return base.GetType( id );
		}
	}

	public override StructValue ExportCustomValue( Object value )
	{
		Type clss = value.GetType();

		if (clss == typeof(etch.examples.ccmuser.ConstsCcmUser.UserConfiguration))
		{
			StructValue sv = new StructValue( _mt_etch_examples_ccmuser_CcmUser_UserConfiguration );
			etch.examples.ccmuser.ConstsCcmUser.UserConfiguration v = (etch.examples.ccmuser.ConstsCcmUser.UserConfiguration) value;
			sv.Add( _mf_devices, v.devices );
			return sv;
		}

		if (clss == typeof(etch.examples.ccmuser.ConstsCcmUser.Device))
		{
			StructValue sv = new StructValue( _mt_etch_examples_ccmuser_CcmUser_Device );
			etch.examples.ccmuser.ConstsCcmUser.Device v = (etch.examples.ccmuser.ConstsCcmUser.Device) value;
			sv.Add( _mf_name, v.name );
			sv.Add( _mf_description, v.description );
			sv.Add( _mf_type, v.type );
			sv.Add( _mf_speeddials, v.speeddials );
			return sv;
		}

		if (clss == typeof(etch.examples.ccmuser.ConstsCcmUser.Speeddial))
		{
			StructValue sv = new StructValue( _mt_etch_examples_ccmuser_CcmUser_Speeddial );
			etch.examples.ccmuser.ConstsCcmUser.Speeddial v = (etch.examples.ccmuser.ConstsCcmUser.Speeddial) value;
			sv.Add( _mf_pkid, v.pkid );
			sv.Add( _mf_number, v.number );
			sv.Add( _mf_label, v.label );
			return sv;
		}

		return base.ExportCustomValue( value );
	}

	
	public override Object ImportCustomValue( StructValue sv )
	{
		XType type = sv.GetXType;
		switch( type.Id )
		{
			case 584321839 /* struct/except _mt_etch_examples_ccmuser_CcmUser_UserConfiguration */:
				{
					return new etch.examples.ccmuser.ConstsCcmUser.UserConfiguration(
						(etch.examples.ccmuser.ConstsCcmUser.Device[])
				// to_Device(
				//	typeof( etch.examples.ccmuser.ConstsCcmUser.Device[] ),
						sv[ ( _mf_devices ) ]
				// )
						);
				}
		
			case 1396020274 /* struct/except _mt_etch_examples_ccmuser_CcmUser_Device */:
				{
					return new etch.examples.ccmuser.ConstsCcmUser.Device(
						(string)
						sv[ ( _mf_name ) ]
						, (string)
						sv[ ( _mf_description ) ]
						, (string)
						sv[ ( _mf_type ) ]
						, (etch.examples.ccmuser.ConstsCcmUser.Speeddial[])
				// to_Speeddial(
				//	typeof( etch.examples.ccmuser.ConstsCcmUser.Speeddial[] ),
						sv[ ( _mf_speeddials ) ]
				// )
						);
				}
		
			case 1136827771 /* struct/except _mt_etch_examples_ccmuser_CcmUser_Speeddial */:
				{
					return new etch.examples.ccmuser.ConstsCcmUser.Speeddial(
						(string)
						sv[ ( _mf_pkid ) ]
						, (string)
						sv[ ( _mf_number ) ]
						, (string)
						sv[ ( _mf_label ) ]
						);
				}
		
		}
		return base.ImportCustomValue( sv );
	}

	
	public override XType GetCustomStructType( Type c )
	{
		//if (c == Date.class) return _mt__Etch_Date;
		if (c == typeof(etch.examples.ccmuser.ConstsCcmUser.UserConfiguration)) return _mt_etch_examples_ccmuser_CcmUser_UserConfiguration;
		if (c == typeof(etch.examples.ccmuser.ConstsCcmUser.Device)) return _mt_etch_examples_ccmuser_CcmUser_Device;
		if (c == typeof(etch.examples.ccmuser.ConstsCcmUser.Speeddial)) return _mt_etch_examples_ccmuser_CcmUser_Speeddial;
		return null;
	}

	
	public override Type GetCustomType( XType type )
	{
		switch (type.Id)
		{
//			case -1201742561 /* _mt__Etch_Date */: return typeof(DateTime);
			case 584321839 /* _mt_etch_examples_ccmuser_CcmUser_UserConfiguration */: return typeof(etch.examples.ccmuser.ConstsCcmUser.UserConfiguration);
			case 1396020274 /* _mt_etch_examples_ccmuser_CcmUser_Device */: return typeof(etch.examples.ccmuser.ConstsCcmUser.Device);
			case 1136827771 /* _mt_etch_examples_ccmuser_CcmUser_Speeddial */: return typeof(etch.examples.ccmuser.ConstsCcmUser.Speeddial);
		}
		
		return null;
	}
	
	/// Field for devices 
	public static Field _mf_devices = new Field( -1600574216, "devices" );
	//{ addField( _mf_devices ); }
	
	/// Field for name 
	public static Field _mf_name = new Field( -444097232, "name" );
	//{ addField( _mf_name ); }
	
	/// Field for description 
	public static Field _mf_description = new Field( -337887177, "description" );
	//{ addField( _mf_description ); }
	
	/// Field for type 
	public static Field _mf_type = new Field( 142931583, "type" );
	//{ addField( _mf_type ); }
	
	/// Field for speeddials 
	public static Field _mf_speeddials = new Field( -618273087, "speeddials" );
	//{ addField( _mf_speeddials ); }
	
	/// Field for pkid 
	public static Field _mf_pkid = new Field( 1199429819, "pkid" );
	//{ addField( _mf_pkid ); }
	
	/// Field for number 
	public static Field _mf_number = new Field( 1183734798, "number" );
	//{ addField( _mf_number ); }
	
	/// Field for label 
	public static Field _mf_label = new Field( -1941158225, "label" );
	//{ addField( _mf_label ); }
	
	/// Field for serverIP 
	public static Field _mf_serverIP = new Field( -1102239153, "serverIP" );
	//{ addField( _mf_serverIP ); }
	
	/// Field for username 
	public static Field _mf_username = new Field( 626623675, "username" );
	//{ addField( _mf_username ); }
	
	/// Field for password 
	public static Field _mf_password = new Field( 184363104, "password" );
	//{ addField( _mf_password ); }
	
	/// Field for result 
	public static Field _mf_result = new Field( -2130379326, "result" );
	//{ addField( _mf_result ); }
	
	/// Field for user 
	public static Field _mf_user = new Field( 873228176, "user" );
	//{ addField( _mf_user ); }
	
	/// Field for newLabel 
	public static Field _mf_newLabel = new Field( 388681113, "newLabel" );
	//{ addField( _mf_newLabel ); }
	
	/// Field for newNumber 
	public static Field _mf_newNumber = new Field( -96759900, "newNumber" );
	//{ addField( _mf_newNumber ); }
	

	public new Field GetField( int id )
	{
		switch (id)
		{
			case -1600574216: return _mf_devices;
			case -444097232: return _mf_name;
			case -337887177: return _mf_description;
			case 142931583: return _mf_type;
			case -618273087: return _mf_speeddials;
			case 1199429819: return _mf_pkid;
			case 1183734798: return _mf_number;
			case -1941158225: return _mf_label;
			case -1102239153: return _mf_serverIP;
			case 626623675: return _mf_username;
			case 184363104: return _mf_password;
			case -2130379326: return _mf_result;
			case 873228176: return _mf_user;
			case 388681113: return _mf_newLabel;
			case -96759900: return _mf_newNumber;
			default: return base.GetField( id );
		}
	}

	/// <summary></summary>
	/// <param name="c">the class to convert obj to (e.g. etch.examples.ccmuser.ConstsCcmUser.UserConfiguration[].class)</param>
	/// <param name="obj"> the generic array of etch.examples.ccmuser.ConstsCcmUser.UserConfiguration</param>
	/// <returns> the generic array of etch.examples.ccmuser.ConstsCcmUser.UserConfiguration converted to a native array of etch.examples.ccmuser.ConstsCcmUser.UserConfiguration</returns>
	///
	//public static Object to_UserConfiguration( Type c, Object obj )
	//{
	//	return ArrayValue2Native( obj, c  );
	//}
	

	/// <summary></summary>
	/// <param name="c">the class to convert obj to (e.g. etch.examples.ccmuser.ConstsCcmUser.Device[].class)</param>
	/// <param name="obj"> the generic array of etch.examples.ccmuser.ConstsCcmUser.Device</param>
	/// <returns> the generic array of etch.examples.ccmuser.ConstsCcmUser.Device converted to a native array of etch.examples.ccmuser.ConstsCcmUser.Device</returns>
	///
	//public static Object to_Device( Type c, Object obj )
	//{
	//	return ArrayValue2Native( obj, c  );
	//}
	

	/// <summary></summary>
	/// <param name="c">the class to convert obj to (e.g. etch.examples.ccmuser.ConstsCcmUser.Speeddial[].class)</param>
	/// <param name="obj"> the generic array of etch.examples.ccmuser.ConstsCcmUser.Speeddial</param>
	/// <returns> the generic array of etch.examples.ccmuser.ConstsCcmUser.Speeddial converted to a native array of etch.examples.ccmuser.ConstsCcmUser.Speeddial</returns>
	///
	//public static Object to_Speeddial( Type c, Object obj )
	//{
	//	return ArrayValue2Native( obj, c  );
	//}
	
}

}