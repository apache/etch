// This file automatically generated by:
//   Etch Version 0.95/csharp backend 0.95
//   Thu Aug 16 12:08:25 CDT 2007

namespace cisco.etch.examples
{


using System;
using Etch.Msg;
using Etch.Transport;
using Etch.Support;


///
///<summary> Message to call translator for TwoWayServer. </summary>
///
public class StubTwoWayServer : StubTwoWay
{
	///
	/// <summary>Stub for TwoWayServer.</summary>
	/// <param name="obj"> the implementation of TwoWayServer responsive to requests.</param>
	/// <param name="pool"> thread pool used to run AsyncReceiverMode.POOL methods.</param>
	/// <param name="free"> thread pool used to run AsyncReceiverMode.FREE methods..</param>
	///
	public StubTwoWayServer( TwoWayServer obj, Pool pool, Pool free ) : base( obj, pool, free )
	{	
		this._obj = obj;
	}
	
	private TwoWayServer _obj;

	public override bool Message( MessageSource _src, Who _sender, Message _msg ) 
	{
		if (_msg == null)
		{
			base.Message( _src, _sender, _msg );
			return true;
		}

		switch (_msg.GetXType.Id)
		{
			case 1167849926: // ValueFactoryTwoWay._mt_cisco_etch_examples_TwoWayServer_sendCUAEMessage
				do_sendCUAEMessage( _src, _sender, _msg );
				return true;
			default:
				return base.Message( _src, _sender, _msg );
		}
	}

	///
	/// <param name="_src"></param>
	/// <param name="_sender"></param>
	/// <param name="_msg"></param>
	/// Exception:
	///		throws Exception	
	///
	void do_sendCUAEMessage( MessageSource _src, Who _sender, Message _msg )
	{
		try
		{
			string msg =
				(string)
					_msg.Get( ValueFactoryTwoWay._mf_msg )
				;

			_obj.sendCUAEMessage(
				msg
			);

			Message _rmsg = _msg.Reply( ValueFactoryTwoWay._mt_cisco_etch_examples_TwoWayServer__result_sendCUAEMessage );
			_src.Message( _sender, _rmsg );
		}
		catch ( Exception e )
		{
			Message _rmsg = _msg.Reply( ValueFactoryTwoWay._mt_cisco_etch_examples_TwoWayServer__result_sendCUAEMessage );
			_rmsg.Add( ValueFactoryTwoWay._mf_result, e );
			_src.Message( _sender, _rmsg );
		}
	}
}

}