// This file automatically generated by:
//   Etch Version 0.95/java backend 0.95
//   Thu Aug 16 11:48:00 CDT 2007

package cisco.etch.examples;

import etch.bindings.java.msg.Message;
import etch.bindings.java.support.MessageSource;
import etch.bindings.java.support.Pool;
import etch.bindings.java.support._Etch_AuthException;
import metreos.core.Who;
import etch.bindings.java.support.Pool.PoolRunnable;

/**
 * Message to call translator for TwoWayServer.
 */
public class StubTwoWayServer extends StubTwoWay
{
	/**
	 * Stub for TwoWayServer.
	 * @param obj the implementation of TwoWayServer responsive to requests.
	 * @param pool thread pool used to run AsyncReceiverMode.FREE methods.
	 * @param free thread pool used to run AsyncReceiverMode.FREE methods.
	 */
	public StubTwoWayServer( TwoWayServer obj, Pool pool, Pool free )
	{
		super( obj, pool, free );
		this._obj = obj;
	}
	
	@SuppressWarnings("unused")
	private final TwoWayServer _obj;

	@Override
	public boolean message( final MessageSource _src, final Who _sender, final Message _msg )
		throws Exception
	{
		if (_msg == null)
		{
			super.message( _src, _sender, _msg );
			return true;
		}

		switch (_msg.type().getId())
		{
			case 1167849926: // ValueFactoryTwoWay._mt_cisco_etch_examples_TwoWayServer_sendCUAEMessage
				do_sendCUAEMessage( _src, _sender, _msg );
				return true;
			default:
				return super.message( _src, _sender, _msg );
		}
	}

	/**
	 * @param _src
	 * @param _sender
	 * @param _msg
	 * @throws Exception
	 */
	final void do_sendCUAEMessage( final MessageSource _src, final Who _sender, final Message _msg )
		throws Exception
	{
		try
		{
			String msg =
				(String)
					_msg.get( ValueFactoryTwoWay._mf_msg )
				;

			_obj.sendCUAEMessage(
				msg
			);
		}
		catch ( Exception e )
		{
			Message _rmsg = _msg.reply( ValueFactoryTwoWay._mt__exception );
			_rmsg.put( ValueFactoryTwoWay._mf_result, e );
			_src.message( _sender, _rmsg );
		}
	}
}
