// Generated by:
// @EtchVersion@ (@EtchBuildTag@) / java @EtchVersion@ (@EtchBuildTag@)
// Wed May 07 13:43:31 CDT 2008

package etch.examples.cuae;

import etch.bindings.java.support.DeliveryService;
import etch.bindings.java.support.Pool;
import etch.bindings.java.transport.Messagizer;
import etch.bindings.java.transport.ServerFactory;
import etch.bindings.java.transport.SessionMessage;
import etch.bindings.java.transport.TransportFactory;
import etch.util.Resources;
import etch.util.core.io.Transport;

/**
 * Transport helper for Cuae. All methods are static.
 */
abstract public class MyCuaeHelper extends CuaeHelper
{

	/**
	 * Constructs a new server session listener per specifications in uri and
	 * resources. This listener will accept requests from clients for new server
	 * sessions.
	 *
	 * @param uri contains specifications for the server session listener and
	 * for the server session transport stack.
	 *
	 * @param resources additional resources to aid in constructing new server
	 * sessions.
	 *
	 * @param implFactory factory used to construct a new instance implementing
	 * CuaeServer. The new instance will receive and process messages from
	 * the client session.
	 *
	 * @return a server session listener.
	 *
	 * @throws Exception
	 */
	public static Transport<?> newListener( String uri, Resources resources,
		final MyCuaeServerFactory implFactory ) throws Exception
	{
		final Resources res = initResources( resources );
		if (!res.containsKey( Messagizer.VALUE_FACTORY ))
			res.put( Messagizer.VALUE_FACTORY, new MyValueFactoryCuae() );

		return TransportFactory.getListener( uri, res, new ServerFactory()
		{
			public void newServer( DeliveryService d ) throws Exception
			{
				Pool qp = (Pool) res.get( QUEUED_POOL );
				Pool fp = (Pool) res.get( FREE_POOL );
				MyValueFactoryCuae vf = (MyValueFactoryCuae) res
					.get( Messagizer.VALUE_FACTORY );
				implFactory.newMyCuaeServer( d, qp, fp, vf );
			}
		} );
	}

	/**
	 * Factory for a Listener to use to create new instances of MyCuaeServer.
	 */
	public interface MyCuaeServerFactory
	{
		/**
		 * @param svc
		 * @param qp
		 * @param fp
		 * @param vf
		 * @return a StubIntf that accepts and processes server messages.
		 */
		public SessionMessage newMyCuaeServer( DeliveryService svc, Pool qp,
			Pool fp, MyValueFactoryCuae vf );
	}
}
