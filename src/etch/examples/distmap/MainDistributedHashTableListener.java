// Generated by:
// @EtchVersion@ (@EtchBuildTag@) / java @EtchVersion@ (@EtchBuildTag@)
// Fri Apr 11 09:02:37 CDT 2008

package etch.examples.distmap;

import java.util.Collections;
import java.util.HashMap;
import java.util.Map;

import etch.util.core.io.Transport;

/**
 * Main program for DistributedHashTableServer. This program makes a listener to accept
 * connections from MainDistributedHashTableClient.
 */
public class MainDistributedHashTableListener implements DistributedHashTableHelper.DistributedHashTableServerFactory
{
	/**
	 * Main program for DistributedHashTableServer.
	 * 
	 * @param args
	 * @throws Exception
	 */
	public static void main( String[] args ) throws Exception
	{
		String uri = "tcp://0.0.0.0:4007";
		
		Transport<?> listener = DistributedHashTableHelper.newListener( uri, null,
			new MainDistributedHashTableListener() );

		listener.transportControl( Transport.START_AND_WAIT_UP, 4000 );
	}
	
	private final Map<String, Object> map =
		Collections.synchronizedMap( new HashMap<String, Object>() );

	public DistributedHashTableServer newDistributedHashTableServer( RemoteDistributedHashTableClient client )
	{
		return new ImplDistributedHashTableServer( client, map );
	}
}
