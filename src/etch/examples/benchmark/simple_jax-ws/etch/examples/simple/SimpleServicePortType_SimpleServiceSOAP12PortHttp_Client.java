package etch.examples.simple;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;

import javax.xml.namespace.QName;

import metreos.util.PerfTest;

/**
 * This class was generated by the CXF 2.0.1-incubator
 * Mon Oct 15 16:03:53 CDT 2007
 * Generated source version: 2.0.1-incubator
 * 
 */
public final class SimpleServicePortType_SimpleServiceSOAP12PortHttp_Client
{
	private static final QName SERVICE_NAME = new QName(
		"http://simple.examples.etch", "SimpleService" );

	private SimpleServicePortType_SimpleServiceSOAP12PortHttp_Client()
	{
	}

	public static void main( String args[] ) throws Exception
	{
		if (args.length == 0)
		{
			System.out.println( "please specify wsdl" );
			System.exit( 1 );
		}
		
		URL wsdlURL = null;
		File wsdlFile = new File( args[0] );
		try
		{
			if (wsdlFile.exists())
			{
				wsdlURL = wsdlFile.toURL();
			}
			else
			{
				wsdlURL = new URL( args[0] );
			}
		}
		catch ( MalformedURLException e )
		{
			e.printStackTrace();
		}

		SimpleService ss = new SimpleService( wsdlURL, SERVICE_NAME );
		final SimpleServicePortType port = ss.getSimpleServiceSOAP12PortHttp();

		System.out.println( "Testing add..." );
		System.out.println( "add( 1, 2 ) result=" + port.add( 1, 2 ) );
		System.out.println( "add( 2, 3 ) result=" + port.add( 2, 3 ) );

		System.out.println( "Testing sum..." );
		List<Integer> vals = new ArrayList<Integer>();
		vals.add( 1 );
		vals.add( 2 );
		vals.add( 3 );
		System.out.println( "sum( 1, 2, 3 ) result=" + port.sum( vals ) );
		
		vals = new ArrayList<Integer>();
		vals.add( 2 );
		vals.add( 3 );
		vals.add( 4 );
		System.out.println( "sum( 2, 3, 4 ) result=" + port.sum( vals ) );

		System.out.println( "Invoking report..." );
		port.report( 23, "all ok" );
		port.report( 19, "stopping" );
		
		new PerfTest( "add", 10, 5 )
		{
			@Override
			public void run( long n )
			{
				while (n-- > 0)
					port.add( 1000000000, 2000000000 );
			}
		}.run();
	
		int n = 1000;
		final List<Integer> values = new ArrayList<Integer>( n );
		for (int i = 0; i < n; i++)
			values.add( i );
		
		new PerfTest( "sum", 10, 5 )
		{
			@Override
			public void run( long n )
			{
				while (n-- > 0)
					port.sum( values );
			}
		}.run();
	
		new PerfTest( "report", 10, 5 )
		{
			@Override
			public void run( long n )
			{
				while (n-- > 0)
					port.report( 23,
						// 50 characters:
						"this message describes the specifics of a code 23." );
			}
		}.run();

		System.exit( 0 );
	}
}
