// This file automatically generated by:
//   Apache Etch 1.1.0-incubating (LOCAL-0) / java 1.1.0-incubating (LOCAL-0)
//   Sat Feb 21 22:11:51 CST 2009
// This file is automatically created and should not be edited!

package etch.services.ns;

import org.apache.etch.util.core.Who;
import org.apache.etch.bindings.java.msg.Message;
import org.apache.etch.bindings.java.support.DeliveryService;
import org.apache.etch.bindings.java.support.Pool;
import org.apache.etch.bindings.java.support.StubHelper;
import org.apache.etch.bindings.java.support._Etch_AuthException;
import org.apache.etch.bindings.java.support.Pool.PoolRunnable;

/**
 * Message to call translator for NameServiceClient.
 */
@SuppressWarnings("unused")
public class StubNameServiceClient extends StubNameService<NameServiceClient>
{
	/**
	 * Stub for NameServiceClient.
	 * @param svc the delivery service.
	 * @param obj the implementation of NameServiceClient responsive to requests.
	 * @param queued thread pool used to run AsyncMode.QUEUED methods.
	 * @param free thread pool used to run AsyncMode.FREE methods.
	 */
	public StubNameServiceClient( DeliveryService svc, NameServiceClient obj, Pool queued, Pool free )
	{
		super( svc, obj, queued, free );
	}
	
	static
	{
	}

	/**
	 * Method used to force static initialization.
	 */
	public static void init()
	{
		// nothing to do.
	}
	
	static
	{
		ValueFactoryNameService._mt_etch_services_ns_NameService_entryChanged.setStubHelper( new StubHelper<NameServiceClient>()
		{
			public final void run( DeliveryService _svc, NameServiceClient _obj, Who _sender, Message _msg ) throws Exception
			{
				final Message _rmsg = _msg.reply();
				try
				{
					_obj.entryChanged(
						(String) _msg.get( ValueFactoryNameService._mf_query )
						, (etch.services.ns.NameService.Entry) _msg.get( ValueFactoryNameService._mf_entry )
					);
				}
				catch ( Exception e )
				{
					sessionNotify( _obj, e );
					_rmsg.put( ValueFactoryNameService._mf_result, e );
				}
				_svc.transportMessage( _sender, _rmsg );
			}
		} );
	}
}
