// This file automatically generated by:
//   Apache Etch 1.1.0-incubating (LOCAL-0) / java 1.1.0-incubating (LOCAL-0)
//   Sat Feb 21 22:11:51 CST 2009
// This file is automatically created and should not be edited!

package etch.services.ns;

import org.apache.etch.bindings.java.msg.AsyncMode;
import org.apache.etch.bindings.java.msg.Direction;
import org.apache.etch.bindings.java.msg.Field;
import org.apache.etch.bindings.java.msg.ImportExportHelper;
import org.apache.etch.bindings.java.msg.StructValue;
import org.apache.etch.bindings.java.msg.Type;
import org.apache.etch.bindings.java.msg.TypeMap;
import org.apache.etch.bindings.java.msg.ValueFactory;
import org.apache.etch.bindings.java.support.Class2TypeMap;
import org.apache.etch.bindings.java.support.DefaultValueFactory;


/**
 * ValueFactory for NameService.
 */
@SuppressWarnings("unused")
public final class ValueFactoryNameService extends DefaultValueFactory
{
	/**
	 * Constructs ValueFactoryNameService.
	 * @param uri the uri used to configure the session.
	 */
	public ValueFactoryNameService( String uri )
	{
		super( uri, types, class2type );
	}
	
	private final static TypeMap types = new TypeMap();
	
	private final static Class2TypeMap class2type = new Class2TypeMap();

	static
	{
		DefaultValueFactory.init( types, class2type );
		initTypes();
		initResults();
		initFields();
		initParams();
	}

	/** Type for etch.services.ns.NameService.Entry */
	public static Type _mt_etch_services_ns_NameService_Entry;

	/** Type for etch.services.ns.NameService.lookup */
	public static Type _mt_etch_services_ns_NameService_lookup;

	/** Type for etch.services.ns.NameService._result_lookup */
	public static Type _mt_etch_services_ns_NameService__result_lookup;

	/** Type for etch.services.ns.NameService.find */
	public static Type _mt_etch_services_ns_NameService_find;

	/** Type for etch.services.ns.NameService._result_find */
	public static Type _mt_etch_services_ns_NameService__result_find;

	/** Type for etch.services.ns.NameService.register */
	public static Type _mt_etch_services_ns_NameService_register;

	/** Type for etch.services.ns.NameService._result_register */
	public static Type _mt_etch_services_ns_NameService__result_register;

	/** Type for etch.services.ns.NameService.registerBulk */
	public static Type _mt_etch_services_ns_NameService_registerBulk;

	/** Type for etch.services.ns.NameService._result_registerBulk */
	public static Type _mt_etch_services_ns_NameService__result_registerBulk;

	/** Type for etch.services.ns.NameService.unregister */
	public static Type _mt_etch_services_ns_NameService_unregister;

	/** Type for etch.services.ns.NameService._result_unregister */
	public static Type _mt_etch_services_ns_NameService__result_unregister;

	/** Type for etch.services.ns.NameService.subscribe */
	public static Type _mt_etch_services_ns_NameService_subscribe;

	/** Type for etch.services.ns.NameService._result_subscribe */
	public static Type _mt_etch_services_ns_NameService__result_subscribe;

	/** Type for etch.services.ns.NameService.unsubscribe */
	public static Type _mt_etch_services_ns_NameService_unsubscribe;

	/** Type for etch.services.ns.NameService._result_unsubscribe */
	public static Type _mt_etch_services_ns_NameService__result_unsubscribe;

	/** Type for etch.services.ns.NameService.unsubscribeAll */
	public static Type _mt_etch_services_ns_NameService_unsubscribeAll;

	/** Type for etch.services.ns.NameService._result_unsubscribeAll */
	public static Type _mt_etch_services_ns_NameService__result_unsubscribeAll;

	/** Type for etch.services.ns.NameService.canLookup */
	public static Type _mt_etch_services_ns_NameService_canLookup;

	/** Type for etch.services.ns.NameService._result_canLookup */
	public static Type _mt_etch_services_ns_NameService__result_canLookup;

	/** Type for etch.services.ns.NameService.canFind */
	public static Type _mt_etch_services_ns_NameService_canFind;

	/** Type for etch.services.ns.NameService._result_canFind */
	public static Type _mt_etch_services_ns_NameService__result_canFind;

	/** Type for etch.services.ns.NameService.canRegister */
	public static Type _mt_etch_services_ns_NameService_canRegister;

	/** Type for etch.services.ns.NameService._result_canRegister */
	public static Type _mt_etch_services_ns_NameService__result_canRegister;

	/** Type for etch.services.ns.NameService.canUnregister */
	public static Type _mt_etch_services_ns_NameService_canUnregister;

	/** Type for etch.services.ns.NameService._result_canUnregister */
	public static Type _mt_etch_services_ns_NameService__result_canUnregister;

	/** Type for etch.services.ns.NameService.canRegisterBulk */
	public static Type _mt_etch_services_ns_NameService_canRegisterBulk;

	/** Type for etch.services.ns.NameService._result_canRegisterBulk */
	public static Type _mt_etch_services_ns_NameService__result_canRegisterBulk;

	/** Type for etch.services.ns.NameService.entryChanged */
	public static Type _mt_etch_services_ns_NameService_entryChanged;

	/** Type for etch.services.ns.NameService._result_entryChanged */
	public static Type _mt_etch_services_ns_NameService__result_entryChanged;

	private static void initTypes()
	{
		_mt_etch_services_ns_NameService_Entry = types.get( "etch.services.ns.NameService.Entry" );
		_mt_etch_services_ns_NameService_lookup = types.get( "etch.services.ns.NameService.lookup" );
		_mt_etch_services_ns_NameService__result_lookup = types.get( "etch.services.ns.NameService._result_lookup" );
		_mt_etch_services_ns_NameService_find = types.get( "etch.services.ns.NameService.find" );
		_mt_etch_services_ns_NameService__result_find = types.get( "etch.services.ns.NameService._result_find" );
		_mt_etch_services_ns_NameService_register = types.get( "etch.services.ns.NameService.register" );
		_mt_etch_services_ns_NameService__result_register = types.get( "etch.services.ns.NameService._result_register" );
		_mt_etch_services_ns_NameService_registerBulk = types.get( "etch.services.ns.NameService.registerBulk" );
		_mt_etch_services_ns_NameService__result_registerBulk = types.get( "etch.services.ns.NameService._result_registerBulk" );
		_mt_etch_services_ns_NameService_unregister = types.get( "etch.services.ns.NameService.unregister" );
		_mt_etch_services_ns_NameService__result_unregister = types.get( "etch.services.ns.NameService._result_unregister" );
		_mt_etch_services_ns_NameService_subscribe = types.get( "etch.services.ns.NameService.subscribe" );
		_mt_etch_services_ns_NameService__result_subscribe = types.get( "etch.services.ns.NameService._result_subscribe" );
		_mt_etch_services_ns_NameService_unsubscribe = types.get( "etch.services.ns.NameService.unsubscribe" );
		_mt_etch_services_ns_NameService__result_unsubscribe = types.get( "etch.services.ns.NameService._result_unsubscribe" );
		_mt_etch_services_ns_NameService_unsubscribeAll = types.get( "etch.services.ns.NameService.unsubscribeAll" );
		_mt_etch_services_ns_NameService__result_unsubscribeAll = types.get( "etch.services.ns.NameService._result_unsubscribeAll" );
		_mt_etch_services_ns_NameService_canLookup = types.get( "etch.services.ns.NameService.canLookup" );
		_mt_etch_services_ns_NameService__result_canLookup = types.get( "etch.services.ns.NameService._result_canLookup" );
		_mt_etch_services_ns_NameService_canFind = types.get( "etch.services.ns.NameService.canFind" );
		_mt_etch_services_ns_NameService__result_canFind = types.get( "etch.services.ns.NameService._result_canFind" );
		_mt_etch_services_ns_NameService_canRegister = types.get( "etch.services.ns.NameService.canRegister" );
		_mt_etch_services_ns_NameService__result_canRegister = types.get( "etch.services.ns.NameService._result_canRegister" );
		_mt_etch_services_ns_NameService_canUnregister = types.get( "etch.services.ns.NameService.canUnregister" );
		_mt_etch_services_ns_NameService__result_canUnregister = types.get( "etch.services.ns.NameService._result_canUnregister" );
		_mt_etch_services_ns_NameService_canRegisterBulk = types.get( "etch.services.ns.NameService.canRegisterBulk" );
		_mt_etch_services_ns_NameService__result_canRegisterBulk = types.get( "etch.services.ns.NameService._result_canRegisterBulk" );
		_mt_etch_services_ns_NameService_entryChanged = types.get( "etch.services.ns.NameService.entryChanged" );
		_mt_etch_services_ns_NameService__result_entryChanged = types.get( "etch.services.ns.NameService._result_entryChanged" );
	}

	private static void initResults()
	{
		_mt_etch_services_ns_NameService_lookup.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_lookup.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_lookup.setResult( _mt_etch_services_ns_NameService__result_lookup );
		_mt_etch_services_ns_NameService__result_lookup.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_lookup.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_find.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_find.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_find.setResult( _mt_etch_services_ns_NameService__result_find );
		_mt_etch_services_ns_NameService__result_find.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_find.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_register.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_register.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_register.setResult( _mt_etch_services_ns_NameService__result_register );
		_mt_etch_services_ns_NameService__result_register.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_register.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_registerBulk.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_registerBulk.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_registerBulk.setResult( _mt_etch_services_ns_NameService__result_registerBulk );
		_mt_etch_services_ns_NameService__result_registerBulk.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_registerBulk.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_unregister.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_unregister.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_unregister.setResult( _mt_etch_services_ns_NameService__result_unregister );
		_mt_etch_services_ns_NameService__result_unregister.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_unregister.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_subscribe.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_subscribe.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_subscribe.setResult( _mt_etch_services_ns_NameService__result_subscribe );
		_mt_etch_services_ns_NameService__result_subscribe.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_subscribe.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_unsubscribe.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_unsubscribe.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_unsubscribe.setResult( _mt_etch_services_ns_NameService__result_unsubscribe );
		_mt_etch_services_ns_NameService__result_unsubscribe.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_unsubscribe.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_unsubscribeAll.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_unsubscribeAll.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_unsubscribeAll.setResult( _mt_etch_services_ns_NameService__result_unsubscribeAll );
		_mt_etch_services_ns_NameService__result_unsubscribeAll.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_unsubscribeAll.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_canLookup.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_canLookup.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_canLookup.setResult( _mt_etch_services_ns_NameService__result_canLookup );
		_mt_etch_services_ns_NameService__result_canLookup.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_canLookup.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_canFind.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_canFind.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_canFind.setResult( _mt_etch_services_ns_NameService__result_canFind );
		_mt_etch_services_ns_NameService__result_canFind.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_canFind.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_canRegister.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_canRegister.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_canRegister.setResult( _mt_etch_services_ns_NameService__result_canRegister );
		_mt_etch_services_ns_NameService__result_canRegister.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_canRegister.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_canUnregister.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_canUnregister.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_canUnregister.setResult( _mt_etch_services_ns_NameService__result_canUnregister );
		_mt_etch_services_ns_NameService__result_canUnregister.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_canUnregister.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_canRegisterBulk.setDirection( Direction.SERVER );
		_mt_etch_services_ns_NameService_canRegisterBulk.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_canRegisterBulk.setResult( _mt_etch_services_ns_NameService__result_canRegisterBulk );
		_mt_etch_services_ns_NameService__result_canRegisterBulk.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_canRegisterBulk.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_entryChanged.setDirection( Direction.CLIENT );
		_mt_etch_services_ns_NameService_entryChanged.setAsyncMode( AsyncMode.NONE );
		_mt_etch_services_ns_NameService_entryChanged.setResult( _mt_etch_services_ns_NameService__result_entryChanged );
		_mt_etch_services_ns_NameService__result_entryChanged.setTimeout( 30000 );
		_mt_etch_services_ns_NameService__result_entryChanged.setDirection( Direction.SERVER );
	}

	static
	{
		class2type.put( etch.services.ns.NameService.Entry.class, _mt_etch_services_ns_NameService_Entry );
		_mt_etch_services_ns_NameService_Entry.setComponentType( etch.services.ns.NameService.Entry.class );
		_mt_etch_services_ns_NameService_Entry.setImportExportHelper( new ImportExportHelper()
		{
			public final StructValue exportValue( ValueFactory vf, Object value )
			{
				StructValue struct = new StructValue( _mt_etch_services_ns_NameService_Entry, vf );
				etch.services.ns.NameService.Entry v = (etch.services.ns.NameService.Entry) value;
				struct.put( _mf_sourceUri, v.sourceUri );
				struct.put( _mf_qualities, v.qualities );
				struct.put( _mf_targetUri, v.targetUri );
				struct.put( _mf_ttl, v.ttl );
				struct.put( _mf_who, v.who );
				struct.put( _mf_lastUpdate, v.lastUpdate );
				struct.put( _mf_removed, v.removed );
				return struct;
			}

			public final Object importValue( StructValue struct )
			{
				etch.services.ns.NameService.Entry v = new etch.services.ns.NameService.Entry();
				v.sourceUri = (String) struct.get( _mf_sourceUri );
				v.qualities = (java.util.Map<?, ?>) struct.get( _mf_qualities );
				v.targetUri = (String) struct.get( _mf_targetUri );
				v.ttl = (Integer) struct.get( _mf_ttl );
				v.who = (String) struct.get( _mf_who );
				v.lastUpdate = (java.util.Date) struct.get( _mf_lastUpdate );
				v.removed = (Boolean) struct.get( _mf_removed );
				return v;
			}
		} );
	}

	/** Field for sourceUri */
	public static Field _mf_sourceUri;

	/** Field for qualities */
	public static Field _mf_qualities;

	/** Field for targetUri */
	public static Field _mf_targetUri;

	/** Field for ttl */
	public static Field _mf_ttl;

	/** Field for who */
	public static Field _mf_who;

	/** Field for lastUpdate */
	public static Field _mf_lastUpdate;

	/** Field for removed */
	public static Field _mf_removed;

	/** Field for source */
	public static Field _mf_source;

	/** Field for query */
	public static Field _mf_query;

	/** Field for offset */
	public static Field _mf_offset;

	/** Field for count */
	public static Field _mf_count;

	/** Field for entries */
	public static Field _mf_entries;

	/** Field for deleteEntry */
	public static Field _mf_deleteEntry;

	/** Field for entry */
	public static Field _mf_entry;

	private static void initFields()
	{
		_mf_sourceUri = new Field( "sourceUri" );
		_mf_qualities = new Field( "qualities" );
		_mf_targetUri = new Field( "targetUri" );
		_mf_ttl = new Field( "ttl" );
		_mf_who = new Field( "who" );
		_mf_lastUpdate = new Field( "lastUpdate" );
		_mf_removed = new Field( "removed" );
		_mf_source = new Field( "source" );
		_mf_query = new Field( "query" );
		_mf_offset = new Field( "offset" );
		_mf_count = new Field( "count" );
		_mf_entries = new Field( "entries" );
		_mf_deleteEntry = new Field( "deleteEntry" );
		_mf_entry = new Field( "entry" );

		_mt_etch_services_ns_NameService__result_lookup.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_find.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_register.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_registerBulk.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_unregister.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_subscribe.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_unsubscribe.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_unsubscribeAll.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_canLookup.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_canFind.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_canRegister.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_canUnregister.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_canRegisterBulk.setResponseField( _mf_result );
		_mt_etch_services_ns_NameService__result_entryChanged.setResponseField( _mf_result );
	}
	
	static
	{
		// initialize the extern serializers:
	}

	private static void initParams()
	{

		// params for Entry
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_sourceUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_qualities, org.apache.etch.bindings.java.support.Validator_custom.get( java.util.Map.class, 0, true ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_targetUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_ttl, org.apache.etch.bindings.java.support.Validator_int.get( 0 ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_who, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_lastUpdate, org.apache.etch.bindings.java.support.Validator_custom.get( java.util.Date.class, 0, false ) );
		_mt_etch_services_ns_NameService_Entry.putValidator( _mf_removed, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );

		// params for lookup
		_mt_etch_services_ns_NameService_lookup.putValidator( _mf_source, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_lookup.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_lookup
		_mt_etch_services_ns_NameService__result_lookup.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_custom.get( etch.services.ns.NameService.Entry.class, 0, true ) );
		_mt_etch_services_ns_NameService__result_lookup.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_lookup.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_lookup.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for find
		_mt_etch_services_ns_NameService_find.putValidator( _mf_query, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_find.putValidator( _mf_offset, org.apache.etch.bindings.java.support.Validator_int.get( 0 ) );
		_mt_etch_services_ns_NameService_find.putValidator( _mf_count, org.apache.etch.bindings.java.support.Validator_int.get( 0 ) );
		_mt_etch_services_ns_NameService_find.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_find
		_mt_etch_services_ns_NameService__result_find.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_custom.get( etch.services.ns.NameService.Entry.class, 1, true ) );
		_mt_etch_services_ns_NameService__result_find.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_find.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_find.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for register
		_mt_etch_services_ns_NameService_register.putValidator( _mf_sourceUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_register.putValidator( _mf_qualities, org.apache.etch.bindings.java.support.Validator_custom.get( java.util.Map.class, 0, true ) );
		_mt_etch_services_ns_NameService_register.putValidator( _mf_targetUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_register.putValidator( _mf_ttl, org.apache.etch.bindings.java.support.Validator_int.get( 0 ) );
		_mt_etch_services_ns_NameService_register.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_register
		_mt_etch_services_ns_NameService__result_register.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_register.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_register.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_register.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for registerBulk
		_mt_etch_services_ns_NameService_registerBulk.putValidator( _mf_entries, org.apache.etch.bindings.java.support.Validator_custom.get( etch.services.ns.NameService.Entry.class, 1, true ) );
		_mt_etch_services_ns_NameService_registerBulk.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_registerBulk
		_mt_etch_services_ns_NameService__result_registerBulk.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_registerBulk.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_registerBulk.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_registerBulk.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for unregister
		_mt_etch_services_ns_NameService_unregister.putValidator( _mf_sourceUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_unregister.putValidator( _mf_deleteEntry, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService_unregister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_unregister
		_mt_etch_services_ns_NameService__result_unregister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unregister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unregister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_unregister.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for subscribe
		_mt_etch_services_ns_NameService_subscribe.putValidator( _mf_query, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_subscribe.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_subscribe
		_mt_etch_services_ns_NameService__result_subscribe.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_subscribe.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_subscribe.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_subscribe.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for unsubscribe
		_mt_etch_services_ns_NameService_unsubscribe.putValidator( _mf_query, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_unsubscribe.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_unsubscribe
		_mt_etch_services_ns_NameService__result_unsubscribe.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unsubscribe.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unsubscribe.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_unsubscribe.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for unsubscribeAll
		_mt_etch_services_ns_NameService_unsubscribeAll.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_unsubscribeAll
		_mt_etch_services_ns_NameService__result_unsubscribeAll.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unsubscribeAll.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_unsubscribeAll.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_unsubscribeAll.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for canLookup
		_mt_etch_services_ns_NameService_canLookup.putValidator( _mf_source, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_canLookup.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_canLookup
		_mt_etch_services_ns_NameService__result_canLookup.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canLookup.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canLookup.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_canLookup.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for canFind
		_mt_etch_services_ns_NameService_canFind.putValidator( _mf_query, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_canFind.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_canFind
		_mt_etch_services_ns_NameService__result_canFind.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canFind.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canFind.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_canFind.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for canRegister
		_mt_etch_services_ns_NameService_canRegister.putValidator( _mf_sourceUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_canRegister.putValidator( _mf_qualities, org.apache.etch.bindings.java.support.Validator_custom.get( java.util.Map.class, 0, true ) );
		_mt_etch_services_ns_NameService_canRegister.putValidator( _mf_targetUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_canRegister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_canRegister
		_mt_etch_services_ns_NameService__result_canRegister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canRegister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canRegister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_canRegister.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for canUnregister
		_mt_etch_services_ns_NameService_canUnregister.putValidator( _mf_sourceUri, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_canUnregister.putValidator( _mf_deleteEntry, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService_canUnregister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_canUnregister
		_mt_etch_services_ns_NameService__result_canUnregister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canUnregister.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canUnregister.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_canUnregister.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for canRegisterBulk
		_mt_etch_services_ns_NameService_canRegisterBulk.putValidator( _mf_entries, org.apache.etch.bindings.java.support.Validator_custom.get( etch.services.ns.NameService.Entry.class, 1, true ) );
		_mt_etch_services_ns_NameService_canRegisterBulk.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_canRegisterBulk
		_mt_etch_services_ns_NameService__result_canRegisterBulk.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_boolean.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canRegisterBulk.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_canRegisterBulk.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_canRegisterBulk.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for entryChanged
		_mt_etch_services_ns_NameService_entryChanged.putValidator( _mf_query, org.apache.etch.bindings.java.support.Validator_string.get( 0 ) );
		_mt_etch_services_ns_NameService_entryChanged.putValidator( _mf_entry, org.apache.etch.bindings.java.support.Validator_custom.get( etch.services.ns.NameService.Entry.class, 0, true ) );
		_mt_etch_services_ns_NameService_entryChanged.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );

		// params for _result_entryChanged
		_mt_etch_services_ns_NameService__result_entryChanged.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_void.get( 0 ) );
		_mt_etch_services_ns_NameService__result_entryChanged.putValidator( _mf__messageId, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
		_mt_etch_services_ns_NameService__result_entryChanged.putValidator( _mf_result, org.apache.etch.bindings.java.support.Validator_RuntimeException.get() ); // thrown RuntimeException
		_mt_etch_services_ns_NameService__result_entryChanged.putValidator( _mf__inReplyTo, org.apache.etch.bindings.java.support.Validator_long.get( 0 ) );
	}
	
	static
	{
		// done updating types, and class2type: lock them.
		types.lock();
		for (Type t: types.values())
			t.lock();
		class2type.lock();
	}
}
