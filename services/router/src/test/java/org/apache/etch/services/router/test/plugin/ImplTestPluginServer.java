/* $Id$
 *
 * Copyright 2009-2010 Cisco Systems Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not
 * use this file except in compliance with the License. You may obtain a copy
 * of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
 * License for the specific language governing permissions and limitations
 * under the License.
 */

// This file automatically generated by:
//   Etch 1.0.1 (ETCH-SF-19) / java 1.0.1 (ETCH-SF-19)
//   Mon Jan 26 14:54:40 CST 2009
// This file is automatically created for your convenience and will not be
// overwritten once it exists! Please edit this file as necessary to implement
// your service logic.

package org.apache.etch.services.router.test.plugin;

import org.apache.etch.services.router.test.plugin.BaseTestPluginServer;
import org.apache.etch.services.router.test.plugin.RemoteTestPluginClient;
import org.apache.etch.services.router.test.utils.PluginTestServerRunner;


/**
 * Your custom implementation of BaseTestPluginServer. Add methods here to provide
 * implementations of messages from the client.
 */
public class ImplTestPluginServer extends BaseTestPluginServer
{
	
	private PluginTestServerRunner _runner;
	/**
	 * Constructs the ImplTestPluginServer.
	 *
	 * @param client a connection to the client session. Use this to send a
	 * message to the client.
	 */
	public ImplTestPluginServer( RemoteTestPluginClient client )
	{
		this( client, null);
	}
	
	public ImplTestPluginServer( RemoteTestPluginClient client, PluginTestServerRunner runner )
	{
		this.client = client;
		_runner = runner;
	}
	
	/**
	 * A connection to the client session. Use this to send a
	 * message to the client.
	 */
	@SuppressWarnings( "unused" )
	private final RemoteTestPluginClient client;

	@Override
	public Integer addMethod( Integer valA, Integer valB )
	{
		System.out.println( String.format( "[%s]ImplTestPluginServer.addMethod - starts", (_runner==null ? "NULL" : _runner.getName())) );
		if (_runner!=null) _runner.methodCalled();
		return valA + valB;
	}

	
}