// This file automatically generated by:
//   Etch 1.0.0 (LOCAL-0) / java 1.0.0 (LOCAL-0)
//   Fri Jan 09 11:53:48 CST 2009
// This file is automatically created for your convenience and will not be
// overwritten once it exists! Please edit this file as necessary to implement
// your service logic.

package org.apache.etch.services.config;

import org.apache.etch.bindings.java.support.ObjSession;
import org.apache.etch.bindings.java.support.ServerFactory;
import org.apache.etch.util.core.io.Session;
import org.apache.etch.util.core.io.Transport;



/**
 * Main program for ConfigurationServer. This program makes a listener to accept
 * connections from MainConfigurationClient.
 */
public class MainConfigurationListener implements ConfigurationHelper.ConfigurationServerFactory
{
	/**
	 * Main program for ConfigurationServer.
	 * 
	 * @param args command line arguments.
	 * @throws Exception
	 */
	public static void main( String[] args ) throws Exception
	{
		// TODO Change to correct URI
		String uri = "tcp://0.0.0.0:4001";
		
		ServerFactory listener = ConfigurationHelper.newListener( uri, null,
			new MainConfigurationListener() );

		// Start the Listener
		listener.transportControl( Transport.START_AND_WAIT_UP, 4000 );
	}

	public ConfigurationServer newConfigurationServer( RemoteConfigurationClient client )
	{
		return new MyYamlConfig( client );
	}
	
	public static class MyYamlConfig extends YamlConfig implements ObjSession
	{
		public MyYamlConfig( RemoteConfigurationClient client )
		{
			super( client );
		}

		public Object _sessionQuery( Object query ) throws Exception
		{
			throw new UnsupportedOperationException( "unknown query "+query );
		}
		
		public void _sessionControl( Object control, Object value )
			throws Exception
		{
			throw new UnsupportedOperationException( "unknown control "+control );
		}

		public void _sessionNotify( Object event ) throws Exception
		{
			if (event == Session.DOWN)
				unloadConfig();
		}
	}
}
