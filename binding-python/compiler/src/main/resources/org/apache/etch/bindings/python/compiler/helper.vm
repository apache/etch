## Copyright 2009 Apache Software Foundation
"""
This file automatically generated by:
  $version
  $now
This file is automatically created and should not be edited!

#set($i = $intf.name()) 
module $intf.parent().name();
"""

from etch.binding.support import *
#if($helper.isServer($mc) || $helper.isBoth($mc))
from etch.binding.msg import ValueFactory
#end
from etch.util.core.io import Transport
from etch.util import Resources

class ${i}ServerFactory(DefaultServerFactory):
    
    def newServer(self, d, vf):
        # TODO: resolve 'res', 'implFactory'
        client = Remote${i}Client(d,vf)
        server = self.implFactory.new${i}Server(client)
        # TODO: resolve QUEUED_POOL, FREE_POOL
        qp = self.res[ QUEUED_POOL ]
        fp = self.res[ FREE_POOL ]
        return Stub${i}Server(d, server, qp, fp)

    def newValueFactory(self):
        return ValueFactory${i}(self.uri)

class ${i}Helper(TransportHelper):
    """
    Transport helper for ${i}. All Methods ar static.
    """

#if($helper.isServer($mc) || $helper.isBoth($mc))

    @staticmethod
    def newListener(uri, resources, implFactory):
        """
	    Constructs a new server session listener per specifications in uri and
	    resources. This listener will accept requests from clients for new server
	    sessions.
	    
	    @param uri contains specifications for the server session listener and
	    for the server session transport stack.
	    
	    @param resources additional resources to aid in constructing new server
	    sessions.
	    
	    @param implFactory factory used to construct a new instance implementing
	    ${i}Server. The new instance will receive and process messages from
	    the client session.
	    
	    @return a server session listener.
	    
	    @throws Exception
        """
		res = ${i}Helper.initResources( resources )

		return TransportFactory.getListener( uri, res, ${i}ServerFactory(implFactory))
#end
#if($helper.isClient($mc) || $helper.isBoth($mc))

	@staticmethod
    def newServer(uri, resources, implFactory):
        """
	    Constructs a new client session per specifications in uri and resources.
	    
	    @param uri contains specifications for the client session transport
	    stack.
	     
	    @param resources additional resources to aid in constructing new client
	    sessions.
	    
	    @param implFactory factory used to construct a new instance implementing
	    ${i}Client. The new instance will receive and process messages from
	    the server session.
	    
	    @return an instance of Remote${i}Server initialized by uri and
	    resources which may be used to send messages to the server session.
	    
	    @throws Exception
	    """
		res = initResources( resources );
		vf  = ValueFactory${i}( uri );
		res.put( Transport.VALUE_FACTORY, vf );

		d = TransportFactory.getTransport( uri, res );
		server = Remote${i}Server( d, vf );
		client = implFactory.new${i}Client( server );
		qp = res.get( QUEUED_POOL );
		fp = res.get( FREE_POOL );
		# new Stub${i}Client( d, client, qp, fp );

		return server
#end
